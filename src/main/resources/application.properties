########################################################
###datasource mysql
########################################################

spring.datasource.url = jdbc:mysql://localhost:3306/cyberrangeai?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT&autoReconnect=true&failOverReadOnly=false
spring.datasource.username =root
spring.datasource.password =~1q~1q~1q
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.max-active=20
spring.datasource.max-idle=8
spring.datasource.min-idle=8
spring.datasource.initial-size=10

########################################################
### Java Persistence Api
########################################################

# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# Naming strategy
#[org.hibernate.cfg.ImprovedNamingStrategy  #org.hibernate.cfg.DefaultNamingStrategy]
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


########################################################
### 日志配置
########################################################

#指定日志输出级别
logging.level.root=INFO

# 保留的日志时间
logging.file.max-history=10


#指定生成日志并保存的路径
#logging.file=G:/spring.log
#在当前磁盘的根路径下创建spring文件夹和里面的log文件夹，使用spring.log作为默认文件
#会在根路径D盘生成
logging.file.name=./log/cyberrangeai/ai.log
#在控制台输出的日志
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%p] %highlight(%C:%L) : %m%n
#指定文件中日志输出的格式
#logging.pattern.file=%boldMagenta(%d{yyyy-MM-dd HH:mm:ss}) [%p] %highlight(%C:%L) : %m%n

# 修改输出到文件的日志格式
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger : %msg%n
#开启支持ANSI格式输出，如果你的控制台可以支持ANSI，那么输出结果会高亮显示
spring.output.ansi.enabled=ALWAYS
# 日志文件最大大小
logging.file.max-size=10MB

# 修改在控制台输出的日志格式
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level [%thread] %logger : %msg%n

# 修改在控制台输出的日志格式 -- 如果想让不同类型的数据具有不同的高亮效果
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %clr(%5p) [%thread] %clr(%logger){cyan} : %msg%n


